@model Certification_System.DTOViewModels.CourseDetailsViewModel

@{
    ViewData["Title"] = "CourseDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Szczegóły szkolenia</h1>
<hr />

@if (!string.IsNullOrWhiteSpace(ViewBag.message))
{
    <h2 class="alert alert-info" role="alert">@ViewBag.message</h2>
}

<h2>Informacje o kursie</h2>

<div class="row m-0 mt-3 mb-3">
    <a asp-action="EditCourseHub" asp-route-courseIdentificator="@Model.CourseIdentificator" asp-controller="Courses" class="btn btn-warning mt-1 mr-1 xs450px_FloatLeft">Edytuj</a>

    @if (Model.CourseEnded == false)
    {
        <a asp-action="EndCourseAndDispenseGivenCertificates" asp-route-courseIdentificator="@Model.CourseIdentificator" asp-controller="Courses" class="btn btn-secondary mt-1 mr-1 xs450px_FloatLeft">Zakończ kurs</a>
    }

    else
    {
        <a asp-action="EndCourseAndDispenseGivenCertificates" asp-route-courseIdentificator="@Model.CourseIdentificator" asp-controller="Courses" class="btn btn-secondary mt-1 mr-1 xs450px_FloatLeft" disabled>Zakończ kurs</a>
    }

    <a asp-action="DisplayAllCourses" asp-controller="Courses" class="btn btn-outline-info mt-1 xs450px_FloatRight">Powrót do listy kursów</a>
</div>

<div>
    <form asp-action="CourseDetails">

        <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

            <div class="form-group">
                <label asp-for="CourseIndexer" class="control-label"></label>
                <input asp-for="CourseIndexer" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control col-12" style="width:100%; min-width:100%;" disabled></textarea>
            </div>

            <div class="form-group">
                <label asp-for="DateOfStart" class="control-label"></label>
                <input asp-for="DateOfStart" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="DateOfEnd" class="control-label"></label>
                <input asp-for="DateOfEnd" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="EnrolledUsersQuantity" class="control-label"></label>
                <input asp-for="EnrolledUsersQuantity" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="EnrolledUsersLimit" class="control-label"></label>
                <input asp-for="EnrolledUsersLimit" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="ExamIsRequired" class="control-label"></label>
                <div class="row pl-3">
                    <input type="checkbox" asp-for="ExamIsRequired" class="form-control col-12" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                </div>
            </div>

            <div class="form-group">
                <label asp-for="CourseEnded" class="control-label"></label>
                <div class="row pl-3">
                    <input type="checkbox" asp-for="CourseEnded" class="form-control col-12" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                </div>
            </div>

            <div class="form-group">
                <label asp-for="CourseLength" class="control-label"></label>
                <input asp-for="CourseLength" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Branches" class="control-label col-12 p-0"></label>
                <div>
                    <div class="btn-group btn-group-toggle row" data-toggle="buttons">
                        @foreach (var branch in Model.Branches)
                        {
                            <label class="btn btn-outline-secondary m-2 active">
                                <input type="checkbox"
                                       name="SelectedBranches"
                                       value="@branch"
                                       autocomplete="off"
                                       disabled
                                       checked />
                                <span>@branch</span>
                            </label>
                        }
                    </div>
                </div>
            </div>

        </div>
    </form>
</div>

<h2 class="mt-4 mb-4">Instruktorzy</h2>

@if (Model.Instructors.Count != 0)
{
    @await Component.InvokeAsync("DisplayCrucialDataWithContactUserDataTable", new { userViewModel = Model.Instructors, tableIdentificator = "listInstructors", operationSet = 1 })
}

else
{
    <div class="mt-4 mb-4 alert alert-warning">Brak instruktorów przypisanych do kursu</div>
}

<h2 class="mt-4 mb-4">Spotkania w ramach kursu</h2>

<div class="mt-3 mb-3">
    <a asp-action="AddNewMeeting" asp-route-courseIdentificator="@Model.CourseIdentificator" asp-controller="Meetings" class="btn btn-primary">Dodaj spotkanie do kursu</a>
</div>

@if (Model.Meetings.Count != 0)
{
    @await Component.InvokeAsync("DisplayMeetingWithoutCourseDataTable", new { meetingViewModel = Model.Meetings, tableIdentificator = "listMeetings", operationSet = 1 })
}

else
{
    <div class="mt-4 mb-4 alert alert-warning">Kurs nie posiada zdefiniowanych spotkań</div>
}

@if (Model.ExamIsRequired)
{
    <h2 class="mt-4 mb-4">Egzaminatorzy</h2>

    @if (Model.Examiners.Count != 0)
    {
        @await Component.InvokeAsync("DisplayCrucialDataWithContactUserDataTable", new { userViewModel = Model.Examiners, tableIdentificator = "listExaminers", operationSet = 2 })
    }

    else
    {
        <div class="mt-4 mb-4 alert alert-warning">Brak egzaminatorów przypisanych do kursu</div>
    }

    <h2 class="mt-4 mb-4">Egzaminy w ramach kursu</h2>

    <div class="mt-3 mb-3">
        <a asp-action="AddExamMenu" asp-route-courseIdentificator="@Model.CourseIdentificator" asp-controller="Exams" class="btn btn-primary">Dodaj egzamin do kursu</a>
    </div>

    @if (Model.Exams.Count != 0)
    {
        @await Component.InvokeAsync("DisplayExamDataTable", new { examViewModel = Model.Exams, tableIdentificator = "listExams", operationSet = 1 })
    }

    else
    {
        <div class="mt-4 mb-4 alert alert-warning">Kurs nie posiada zdefiniowanych egzaminów</div>
    }
}

<h2 class="mt-4 mb-4">Użytkownicy zapisani na kurs</h2>

<div class="mt-3 mb-3">
    <a asp-action="AssignUserToCourse" asp-route-courseIdentificator="@Model.CourseIdentificator" asp-controller="Courses" class="btn btn-primary">Dodaj użytkownika do kursu</a>
</div>

@if (Model.EnrolledUsers.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listUsers" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.EnrolledUsers.First().Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EnrolledUsers.First().FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EnrolledUsers.First().LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EnrolledUsers.First().CompanyRoleWorker)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.EnrolledUsers.First().CompanyRoleManager)
                    </th>
                    @*@if (Model.CourseEnded)
                        {
                            <th>
                                @Html.DisplayNameFor(model => model.DispensedGivenCertificates)
                            </th>
                        }*@
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in Model.EnrolledUsers)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => user.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => user.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => user.LastName)
                        </td>
                        <td>
                            <ul>
                                @foreach (var companyWorker in user.CompanyRoleWorker)
                                {
                                    <li>@companyWorker</li>
                                }
                            </ul>
                        </td>
                        <td>
                            <ul>
                                @foreach (var companyManager in user.CompanyRoleManager)
                                {
                                    <li>@companyManager</li>
                                }
                            </ul>
                        </td>
                        @*@if (Model.CourseEnded)
                            {
                                <td>
                                    <input type="checkbox" asp-for="@Model.DispensedGivenCertificates.Where(z=> z.UserIdentificator == user.UserIdentificator).Select(z=> z.GivenCertificateIsEarned).FirstOrDefault()" data-toggle="toggle" data-on="Przyznano" data-off="Nie przyznano" data-size="sm" />
                                </td>
                            }*@
                        <td>
                            <div class="dropdown p-0">
                                <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                <div class="dropdown-menu">
                                    <a asp-action="UserDetails" asp-route-userIdentificator="@user.UserIdentificator" asp-controller="Users" class="btn btn-info w-100 mb-1">Szczegóły</a>
                                    <a asp-action="DeleteUsersFromCourse" asp-route-courseIdentificator="@Model.CourseIdentificator" asp-controller="Courses" class="btn btn-danger w-100">Usuń z kursu</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

else
{
    <div class="mt-4 mb-4 alert alert-warning">Brak użytkowników zapisanych na kurs</div>
}

@section Scripts {
    <script>
        $(document).ready(function () {

            $('#listMeetings').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listUsers').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listInstructors').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listExaminers').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listExams').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );
        });
    </script>


}
