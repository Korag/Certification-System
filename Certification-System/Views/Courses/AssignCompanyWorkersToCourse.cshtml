@model Certification_System.DTOViewModels.AssignCompanyWorkersToCourseViewModel
@using System.Globalization

@{
    ViewData["Title"] = "AssignCompanyWorkersToCourse";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2>Zapisywanie pracowników przedsiębiorstwa na kurs</h2>
<hr />

<div class="row m-0 mt-3 mb-3">
    <a asp-action="CourseOffer" asp-controller="Courses" class="btn btn-outline-info mt-1 xs300px_FloatRight">Powrót do oferty kursów</a>
</div>

<form asp-action="AssignCompanyWorkersToCourse">
    <div>
        @*<h2>Informacje o egzaminie</h2>*@

        <div>
            <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

                <input asp-for="Course.CourseIdentificator" class="form-control col-12" readonly hidden />
                <input asp-for="Price" class="form-control col-12" readonly hidden />

                <div class="form-group">
                    <label asp-for="Course.CourseIndexer" class="control-label"></label>
                    <input asp-for="Course.CourseIndexer" class="form-control col-12" readonly />
                </div>

                <div class="form-group">
                    <label asp-for="Course.Name" class="control-label"></label>
                    <input asp-for="Course.Name" class="form-control col-12" readonly />
                </div>

                <div class="form-group">
                    <label asp-for="Course.Description" class="control-label"></label>
                    <textarea asp-for="Course.Description" class="form-control col-12" style="width:100%; min-width:100%;" readonly></textarea>
                </div>

                <div class="form-group">
                    <label asp-for="Course.DateOfStart" class="control-label"></label>
                    <input asp-for="Course.DateOfStart" class="form-control col-12" readonly />
                </div>

                <div class="form-group">
                    <label asp-for="Course.DateOfEnd" class="control-label"></label>
                    <input asp-for="Course.DateOfEnd" class="form-control col-12" readonly />
                </div>

                <div class="form-group mb-0">
                    <label asp-for="Course.Branches" class="control-label"></label>
                    <div class="row ml-0 mr-0">
                        <div>
                            @foreach (var branch in Model.Course.Branches)
                            {
                                <label class="btn btn-secondary align-content-center">
                                    <span>@branch</span>
                                </label>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <h2 class="mt-4 mb-4">Zapisy na kurs</h2>

    <div class="form-group">
        <label asp-for="VacantSeats" class="control-label"></label>
        <input asp-for="VacantSeats" class="form-control col-12" readonly />
    </div>

    <div class="row justify-content-center mt-5">
        <div class="mr-3 p-1" style="font-size:30px">
            <label asp-for="Price"></label>:
        </div>
        <div class="alert-primary p-1" style="font-size:30px">@Model.Price PLN</div>
    </div>

    @if (Model.CompanyWorkers.Count != 0)
    {
        @await Component.InvokeAsync("AssignCompanyWorkersToCourseDataTable", new { userViewModel = Model.CompanyWorkers, userToAddViewModel = Model.CompanyWorkersToAssignToCourse, tableIdentificator = "listUsers" })

        <div class="row justify-content-center mt-4 mb-4">
            <div class="mr-3 p-1" style="font-size:30px">
                Sumaryczna cena za zapisanie pracowników:
            </div>
            <div class="alert-primary p-1" style="font-size:30px" id="overallPrice">0 PLN</div>
        </div>

        @if (Model.VacantSeats != 0 && Model.CompanyWorkersToAssignToCourse.Count() != 0)
        {
            <div>
                <div class="row justify-content-center">
                    <button type="button" class="btn btn-primary mt-1 xs300px_JustifyContentCenter" data-toggle="modal" data-target="#modal">Zapisuje pracownków i zobowiązuje się do zapłaty</button>
                </div>
            </div>
        }
        else
        {
            <div class="mt-4 mb-4 alert alert-danger text-center">Brak wolnych miejsc</div>
        }

        <div asp-validation-summary="ModelOnly" class="row justify-content-center alert alert-danger validation-model"></div>
    }
    else
    {
        <div class="mt-4 mb-4 alert alert-warning">Brak pracowników, którzy nie są zapisani na ten kurs</div>
    }

    @await Component.InvokeAsync("Modal", new { Title = "Zapisy na kurs", Body = "Czy na pewno chcesz zapisać grupę pracowników na wybrany kurs ? Poprzez kliknięcie w przycisk zobowiązuje się Pan/Pani do uiszczenia stosownej opłaty za uczestnictwo grupy pracowników w kursie wymienionym powyżej.", FormSubmit = true, ButtonText = "Zapisz pracowników", ButtonClass = "btn-success" })

</form>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listUsers");}
    @{await Html.RenderPartialAsync("_CheckBoxLimitScript", Model.VacantSeats);}

    <script>
    $('[type="checkbox"]').on('change', function (event, state) {

        var companyWorkersCount = $('[type="checkbox"]:checked').length;

        var singlePrice = @Model.Price.ToString(new CultureInfo("en-US"));
        var overallPrice = companyWorkersCount * singlePrice;

        $('#overallPrice').replaceWith('<div class="alert-primary p-1" style="font-size:30px" id="overallPrice">' + overallPrice +  ' PLN</div>')
    });
    </script>
}
