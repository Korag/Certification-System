@model IEnumerable<Certification_System.DTOViewModels.DisplayCourseViewModel>
@using Certification_System.DTOViewModels

@{
    ViewData["Title"] = "DisplayAllCourses";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Lista wszystkich kursów</h1>
<hr />

@if (!string.IsNullOrWhiteSpace(ViewBag.message))
{
    <h2 class="alert alert-info" role="alert">@ViewBag.message</h2>
}

<div class="mt-3 mb-3">
    <a asp-action="AddCourseMenu" asp-controller="Courses" class="btn btn-primary">Dodaj nowy kurs</a>
</div>

<div class="row justify-content-center form-group">
    <label class="control-label" id="labelWithSelect" style="margin-bottom:0px; margin-top:7px">Status kursu:</label>
    <select id="selectCourseEndedFilter" data-style="btn-light" data-container="body" data-width="50%" data-size="auto" data-header="Wybierz status kursu" data-live-search="true" title="Nie wybrano żadnego elementu" data-none-results-text="Nie znaleziono szukanej frazy" class="form-control selectpicker show-tick">
        <option value="" selected>Brak filtra</option>
        <option value="1">Archiwalne kursy</option>
        <option value="0">Aktualne kursy</option>
    </select>
</div>

@await Component.InvokeAsync("DisplayCourseDataTable", new { courseViewModel = Model, tableIdentificator = "listCourses", operationSet = 2 })

@section Scripts{
    @{await Html.RenderPartialAsync("_DataTableWithFilterOnColumnScript", new DataTableExtendedScriptViewModel { TableIdentificator = "listCourses", NumberOfColumn = 8, SelectId = "selectCourseEndedFilter" });}
}