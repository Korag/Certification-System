@model Certification_System.DTOViewModels.ExaminerDetailsViewModel

@{
    ViewData["Title"] = "ExaminerDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Szczegóły egzaminatora</h1>
<hr />

<div>

    <h2>Informacje o użytkowniku</h2>

    <div class="row m-0 mt-3 mb-3">
        <a asp-action="EditUser" asp-route-userIdentificator="UserIdentificator" asp-controller="Users" class="btn btn-primary mt-1 mr-1 xs450px_FloatLeft">Edytuj</a>
        <div class="dropdown p-0 mt-1">
            <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Wyślij email</button>
            <div class="dropdown-menu">
                <a asp-action="SendEmailConfirmationLink" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")" asp-route-userIdentificator="@Model.UserIdentificator" asp-controller="Account" class="btn btn-primary w-100 mb-1">Potwierdzenie adresu email</a>
                <a asp-action="ForceResetUserPassword" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")" asp-route-userIdentificator="@Model.UserIdentificator" asp-controller="Account" class="btn btn-secondary w-100">Reset hasła</a>
            </div>
        </div>

        <a asp-action="DisplayAllUsers" asp-controller="Users" class="btn btn-outline-info mt-1 xs450px_FloatRight">Powrót do listy użytkowników</a>
    </div>

    <form asp-action="ExaminerDetails">

        <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Country" class="control-label"></label>
                <input asp-for="Country" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="PostCode" class="control-label"></label>
                <input asp-for="PostCode" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="NumberOfApartment" class="control-label"></label>
                <input asp-for="NumberOfApartment" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Roles" class="control-label"></label>
                <div class="row mb-2 ml-0 mr-0">
                    <div>
                        @foreach (var role in Model.Roles)
                        {
                            <label class="btn btn-secondary align-content-center">
                                <span>@role</span>
                            </label>
                        }
                    </div>
                </div>
            </div>

        </div>
    </form>
</div>

<h2 class="mt-4 mb-4">Kursy egzaminatora</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddCourseMenu" asp-controller="Courses" class="btn btn-primary">Dodaj kurs</a>
</div>

@if (Model.Courses.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listCourses" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().DateOfStart)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().DateOfEnd)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().EnrolledUsersLimit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().EnrolledUsersQuantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().ExamIsRequired)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseEnded)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseLength)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Branches)
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var course in Model.Courses)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => course.CourseIndexer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.DateOfStart)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.DateOfEnd)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.EnrolledUsersLimit)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.EnrolledUsersQuantity)
                        </td>
                        <td>
                            <input type="checkbox" asp-for="@course.ExamIsRequired" class="form-control col-12" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                        </td>
                        <td>
                            <input type="checkbox" asp-for="@course.CourseEnded" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.CourseLength)
                        </td>
                        <td>
                            <ul>
                                @foreach (var branch in course.Branches)
                                {
                                    <li>@branch</li>
                                }
                            </ul>
                        </td>
                        <td>
                            <div class="dropdown p-0">
                                <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                <div class="dropdown-menu">
                                    <a asp-action="CourseDetails" asp-route-courseIdentificator="@course.CourseIdentificator" asp-controller="Courses" class="btn btn-info w-100 mb-1">Szczegóły</a>
                                    <a asp-action="EditCourse" asp-route-courseIdentificator="@course.CourseIdentificator" asp-controller="Courses" class="btn btn-warning w-100">Edytuj</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie uczestniczył w żadnym kursie w charakterze egzaminatora.</div>
}

<h2 class="mt-4 mb-4">Egzaminy egzaminatora</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddExamMenu" asp-controller="Exams" class="btn btn-primary">Dodaj nowy egzamin</a>
</div>

@if (Model.Exams.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listExams" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().Course.CourseIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().Course.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().Course.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().ExamIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().OrdinalNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().DateOfStart)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().DateOfEnd)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().DurationDays)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().DurationMinutes)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().ExamDividedToTerms)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().UsersQuantitiy)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Exams.First().UsersLimit)
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var exam in Model.Exams)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => exam.Course.CourseIndexer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.Course.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.Course.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.ExamIndexer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.OrdinalNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.DateOfStart)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.DateOfEnd)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.DurationDays)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.DurationMinutes)
                        </td>
                        <td>
                            <input type="checkbox" asp-for="@exam.ExamDividedToTerms" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.UsersQuantitiy)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => exam.UsersLimit)
                        </td>
                        <td>
                            <div class="dropdown p-0">
                                <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                <div class="dropdown-menu">
                                    <a asp-action="MarkExam" asp-route-examIdentificator="@exam.ExamIdentificator" asp-controller="Exams" class="btn btn-primary w-100 mb-1">Oceń egzamin</a>
                                    <a asp-action="AddNewExamTerm" asp-route-examIdentificator="@exam.ExamIdentificator" asp-controller="Exams" class="btn btn-secondary w-100">Dodaj termin egzaminu</a>
                                    <a asp-action="ExamDetails" asp-route-examIdentificator="@exam.ExamIdentificator" asp-controller="Exams" class="btn btn-info w-100 mb-1">Szczegóły nadanego certyfikatu</a>
                                    <a asp-action="EditExamHub" asp-route-examIdentificator="@exam.ExamIdentificator" asp-controller="Exams" class="btn btn-warning w-100 mb-1">Edytuj egzamin</a>
                                    <a asp-action="AddUsersToExam" asp-route-examIdentificator="@exam.ExamIdentificator" asp-controller="Exams" class="btn btn-light w-100">Przypisz użytkowników</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie przeprowadzał do tej pory żadnego egzaminu.</div>
}

<h2 class="mt-4 mb-4">Tury danych egzaminów egzaminatora</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddExamMenu" asp-controller="Exams" class="btn btn-primary">Dodaj nowy egzamin</a>
</div>

@if (Model.ExamsTerms.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listExamsTerms" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.ExamsTerms.First().Exam.ExamIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExamsTerms.First().Exam.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExamsTerms.First().Exam.Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExamsTerms.First().Exam.OrdinalNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExamsTerms.First().ExamTermIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExamsTerms.First().DateOfStart)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExamsTerms.First().DateOfEnd)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExamsTerms.First().DurationDays)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExamsTerms.First().DurationMinutes)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExamsTerms.First().UsersQuantitiy)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.ExamsTerms.First().UsersLimit)
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var examTerm in Model.ExamsTerms)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => examTerm.Exam.ExamIndexer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examTerm.Exam.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examTerm.Exam.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examTerm.Exam.OrdinalNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examTerm.ExamTermIndexer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examTerm.DateOfStart)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examTerm.DateOfEnd)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examTerm.DurationDays)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examTerm.DurationMinutes)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examTerm.UsersQuantitiy)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examTerm.UsersLimit)
                    </td>
                    <td>
                        <div class="dropdown p-0">
                            <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                            <div class="dropdown-menu">
                                @*todo*@
                                @*todo*@
                                @*todo*@
                            </div>
                        </div>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie przeprowadzał do tej pory żadnej tury danego egzaminu.</div>
}

@section Scripts{
    <script>
        $(document).ready(function () {

            $('#listCourses').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listExams').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listExamsTerms').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );
        });
    </script>
}
