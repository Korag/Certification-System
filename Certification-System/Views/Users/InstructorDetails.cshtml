@model Certification_System.DTOViewModels.InstructorDetailsViewModel

@{
    ViewData["Title"] = "InstructorDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Szczegóły instruktora</h1>
<hr />

<div>

    <h2>Informacje o użytkowniku</h2>

    <div class="row m-0 mt-3 mb-3">
        <a asp-action="EditUser" asp-route-userIdentificator="UserIdentificator" asp-controller="Users" class="btn btn-primary mt-1 xs450px_FloatLeft">Edytuj</a>
        <a asp-action="DisplayAllUsers" asp-controller="Users" class="btn btn-outline-info mt-1 xs450px_FloatRight">Powrót do listy użytkowników</a>
    </div>

    <form asp-action="InstructorDetails">

        <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Country" class="control-label"></label>
                <input asp-for="Country" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="PostCode" class="control-label"></label>
                <input asp-for="PostCode" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="NumberOfApartment" class="control-label"></label>
                <input asp-for="NumberOfApartment" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Roles" class="control-label"></label>
                <div class="row mb-2 ml-0 mr-0">
                    <div>
                        @foreach (var role in Model.Roles)
                        {
                            <label class="btn btn-secondary align-content-center">
                                <span>@role</span>
                            </label>
                        }
                    </div>
                </div>
            </div>

        </div>
    </form>
</div>

<h2 class="mt-4 mb-4">Kursy instruktora</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddNewCourse" asp-controller="Courses" class="btn btn-primary">Dodaj kurs</a>
</div>

@if (Model.Courses.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="coursesList" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().DateOfStart)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().DateOfEnd)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().EnrolledUsersLimit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().EnrolledUsersQuantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().ExamIsRequired)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseEnded)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseLength)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Branches)
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var course in Model.Courses)
                {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => course.CourseIndexer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => course.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => course.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => course.DateOfStart)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => course.DateOfEnd)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => course.EnrolledUsersLimit)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => course.EnrolledUsersQuantity)
                    </td>
                    <td>
                        <input type="checkbox" asp-for="@course.ExamIsRequired" class="form-control col-12" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                    </td>
                    <td>
                        <input type="checkbox" asp-for="@course.CourseEnded" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => course.CourseLength)
                    </td>
                    <td>
                        <ul>
                            @foreach (var branch in course.Branches)
                            {
                                <li>@branch</li>
                            }
                        </ul>
                    </td>
                    <td>
                        <div class="dropdown p-0">
                            <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                            <div class="dropdown-menu">
                                <a asp-action="CourseDetails" asp-route-courseIdentificator="@course.CourseIdentificator" asp-controller="Courses" class="btn btn-info w-100 mb-1">Szczegóły</a>
                                <a asp-action="EditCourse" asp-route-courseIdentificator="@course.CourseIdentificator" asp-controller="Courses" class="btn btn-warning w-100">Edytuj</a>
                            </div>
                        </div>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie uczęszczał na żaden kurs</div>
}

<h2 class="mt-4 mb-4">Spotkania prowadzone przez instruktora</h2>

@if (Model.Meetings.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="meetingsList" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().MeetingIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().DateOfMeeting)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().Country)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().PostCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().NumberOfApartment)
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var meeting in Model.Meetings)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.MeetingIndexer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.DateOfMeeting)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.Country)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.City)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.PostCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.NumberOfApartment)
                        </td>
                        <td>
                            <div class="dropdown p-0">
                                <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                <div class="dropdown-menu">
                                    <a asp-action="MeetingDetails" asp-route-meetingIdentificator="@meeting.MeetingIdentificator" asp-controller="Users" class="btn btn-info w-100 mb-1">Szczegóły</a>
                                    <a asp-action="EditMeeting" asp-route-meetingIdentificator="@meeting.MeetingIdentificator" asp-controller="Users" class="btn btn-warning w-100 mb-1">Edytuj</a>
                                    <a asp-action="CheckUsersPresence" asp-route-meetingIdentificator="@meeting.MeetingIdentificator" asp-controller="Meetings" class="btn btn-primary w-100">Sprawdź obecność</a>
                                </div>
                            </div>

                            @*<a asp-action="MeetingDetails" asp-route-meetingIdentificator="@meeting.MeetingIdentificator" asp-controller="Users" class="btn btn-info m-1">Szczegóły spotkania</a>
                                <a asp-action="EditMeeting" asp-route-meetingIdentificator="@meeting.MeetingIdentificator" asp-controller="Users" class="btn btn-warning m-1">Edytuj spotkanie</a>*@
                            @*<a asp-action="CheckUsersPresence" asp-route-meetingIdentificator="@meeting.MeetingIdentificator" asp-controller="Meetings" class="btn btn-primary m-1">Sprawdź obecność</a>*@
                            @*@Html.ActionLink("Szczegóły instruktora", "InstructorDetail", new { instructorIdentificator = item.Instructors }, new { @class = "btn btn-secondary" })*@
                            @*@Html.ActionLink("Usuń spotkanie ze szkolenia", "DeleteMeeting", new { meetingIdentificator = item.MeetingIdentificator }) |*@
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Instruktor nie został przypisany do żadnego spotkania</div>
}


@section Scripts{
    <script>
        $(document).ready(function () {

            $('#coursesList').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#meetingsList').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );
        });
    </script>
}
