@model Certification_System.DTOViewModels.UserDetailsViewModel

@{
    ViewData["Title"] = "UserDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Szczegóły użytkownika</h1>
<hr />

@if (!string.IsNullOrWhiteSpace(ViewBag.message))
{
    <h2 class="alert alert-info" role="alert">@ViewBag.message</h2>
}

<div>

    <h2>Informacje o użytkowniku</h2>

    <div class="row m-0 mt-3 mb-3">
        <a asp-action="EditUser" asp-route-userIdentificator="@Model.UserIdentificator" asp-controller="Users" class="btn btn-warning mt-1 mr-1 xs450px_FloatLeft">Edytuj</a>
        <div class="dropdown p-0 mt-1">
            <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Wyślij email</button>
            <div class="dropdown-menu">
                <a asp-action="SendEmailConfirmationLink" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")" asp-route-userIdentificator="@Model.UserIdentificator" asp-controller="Account" class="btn btn-primary w-100 mb-1">Potwierdzenie adresu email</a>
                <a asp-action="ForceResetUserPassword" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")" asp-route-userIdentificator="@Model.UserIdentificator" asp-controller="Account" class="btn btn-secondary w-100">Reset hasła</a>
            </div>
        </div>

        <a asp-action="DisplayAllUsers" asp-controller="Users" class="btn btn-outline-info mt-1 xs450px_FloatRight">Powrót do listy użytkowników</a>
    </div>

    <form asp-action="UserDetails">

        <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Country" class="control-label"></label>
                <input asp-for="Country" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="PostCode" class="control-label"></label>
                <input asp-for="PostCode" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="NumberOfApartment" class="control-label"></label>
                <input asp-for="NumberOfApartment" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Roles" class="control-label"></label>
                <div class="row mb-2 ml-0 mr-0">
                    <div>
                        @foreach (var role in Model.Roles)
                        {
                            <label class="btn btn-secondary align-content-center">
                                <span>@role</span>
                            </label>
                        }
                    </div>
                </div>
            </div>

        </div>
    </form>
</div>

<h2 class="mt-4 mb-4">Przedsiębiorstwa powiązane z użytkownikiem</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddNewCompany" asp-controller="Companies" class="btn btn-primary">Dodaj nowe przedsiębiorstwo</a>
</div>

@if (Model.Companies.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listCompanies" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().CompanyName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Phone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Country)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().PostCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().NumberOfApartment)
                    </th>
                    <th>
                        Rola użytkownika w przesiębiorstwie
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var company in Model.Companies)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => company.CompanyName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.Phone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.Country)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.City)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.PostCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.NumberOfApartment)
                        </td>
                        <td>
                            @if (Model.CompanyRoleWorker.Contains(company.CompanyIdentificator))
                            {
                                <p>@Html.DisplayNameFor(model => model.CompanyRoleWorker)</p>
                            }
                            @if (Model.CompanyRoleManager.Contains(company.CompanyIdentificator))
                            {
                                <p>@Html.DisplayNameFor(model => model.CompanyRoleManager)</p>
                            }
                        </td>
                        <td>
                            <div class="dropdown p-0">
                                <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                <div class="dropdown-menu">
                                    <a asp-action="CompanyDetails" asp-route-companyIdentificator="@company.CompanyIdentificator" asp-controller="Users" class="btn btn-info w-100 mb-1">Szczegóły</a>
                                    <a asp-action="EditCompany" asp-route-companyIdentificator="@company.CompanyIdentificator" asp-controller="Users" class="btn btn-warning w-100">Edytuj</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie jest zrzeszony z żadnym przedsiębiorstwem</div>
}

<h2 class="mt-4 mb-4">Certyfikaty użytkownika</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddNewGivenCertificate" asp-controller="GivenCertificates" class="btn btn-primary">Nadaj nowy certyfikat</a>
</div>

@if (Model.GivenCertificates.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listGivenCertificates" class="table table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenCertificates.First().GivenCertificateIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenCertificates.First().ReceiptDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenCertificates.First().ExpirationDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenCertificates.First().Certificate.CertificateIndexer) i @Html.DisplayNameFor(model => model.GivenCertificates.First().Certificate.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenCertificates.First().Course.CourseIndexer) i @Html.DisplayNameFor(model => model.GivenCertificates.First().Course.Name)
                    </th>
                    <th>
                        Certyfikat jest ważny ?
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var givenCertificate in Model.GivenCertificates)
                {
                    <tr class="alert @if (givenCertificate.ExpirationDate < DateTime.Now) { <text> table-danger </text>} else { <text> table-success </text> }">
                        <td>
                            @Html.DisplayFor(modelItem => givenCertificate.GivenCertificateIndexer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => givenCertificate.ReceiptDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => givenCertificate.ExpirationDate)
                        </td>
                        <td>
                            @Html.DisplayFor(model => givenCertificate.Certificate.CertificateIndexer) @Html.DisplayFor(model => givenCertificate.Certificate.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(model => givenCertificate.Course.CourseIndexer) @Html.DisplayFor(model => givenCertificate.Course.Name)
                        </td>
                        <td style="text-align:center">
                            @if (givenCertificate.ExpirationDate < DateTime.Now)
                            {
                                <span class="fas fa-times" style="font-size:34px"></span>
                            }
                            else
                            {
                                <span class="fas fa-check-circle" style="font-size:34px"></span>
                            }
                        </td>
                        <td>
                            <a asp-action="EditGivenCertificate" asp-route-givenCertificateIdentificator="@givenCertificate.GivenCertificateIdentificator" asp-controller="GivenCertificate" class="btn btn-warning">Edytuj nadany certyfikat</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownikowi nie przyznano żadnych certyfikatów</div>
}

<h2 class="mt-4 mb-4">Stopnie zawodowe użytkownika</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddNewGivenDegree" asp-controller="GivenDegrees" class="btn btn-primary">Nadaj nowy stopień zawodowy</a>
</div>

@if (Model.GivenDegrees.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listGivenDegrees" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenDegrees.First().GivenDegreeIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenDegrees.First().ReceiptDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenDegrees.First().ExpirationDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenDegrees.First().Degree.DegreeIndexer) i @Html.DisplayNameFor(model => model.GivenDegrees.First().Degree.Name)
                    </th>
                    <th>
                        Stopień zawodowy jest ważny ?
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var givenDegree in Model.GivenDegrees)
                {
                    <tr class="alert @if (givenDegree.ExpirationDate < DateTime.Now) { <text> table-danger </text>} else { <text> table-success </text> }">
                        <td>
                            @Html.DisplayFor(modelItem => givenDegree.GivenDegreeIndexer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => givenDegree.ReceiptDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => givenDegree.ExpirationDate)
                        </td>
                        <td>
                            @Html.DisplayFor(model => givenDegree.Degree.DegreeIndexer) @Html.DisplayFor(model => givenDegree.Degree.Name)
                        </td>
                        <td style="text-align:center">
                            @if (givenDegree.ExpirationDate < DateTime.Now)
                            {
                                <span class="fas fa-times" style="font-size:34px"></span>
                            }
                            else
                            {
                                <span class="fas fa-check-circle" style="font-size:34px"></span>
                            }
                        </td>
                        <td>
                            <a asp-action="EditGivenDegree" asp-route-givenDegreeIdentificator="@givenDegree.GivenDegreeIdentificator" asp-controller="GivenDegrees" class="btn btn-warning m-1">Edytuj naadany stopień zawodowy</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownikowi nie przyznano żadnych stopni zawodowych</div>
}

<h2 class="mt-4 mb-4">Kursy użytkownika</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddCourseMenu" asp-controller="Courses" class="btn btn-primary">Dodaj kurs</a>
</div>

@if (Model.Courses.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listCourses" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().DateOfStart)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().DateOfEnd)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().EnrolledUsersLimit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().EnrolledUsersQuantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().ExamIsRequired)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseEnded)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseLength)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Branches)
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var course in Model.Courses)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => course.CourseIndexer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.DateOfStart)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.DateOfEnd)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.EnrolledUsersLimit)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.EnrolledUsersQuantity)
                        </td>
                        <td>
                            <input type="checkbox" asp-for="@course.ExamIsRequired" class="form-control col-12" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                        </td>
                        <td>
                            <input type="checkbox" asp-for="@course.CourseEnded" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => course.CourseLength)
                        </td>
                        <td>
                            <ul>
                                @foreach (var branch in course.Branches)
                                {
                                    <li>@branch</li>
                                }
                            </ul>
                        </td>
                        <td>
                            <div class="dropdown p-0">
                                <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                <div class="dropdown-menu">
                                    <a asp-action="CourseDetails" asp-route-courseIdentificator="@course.CourseIdentificator" asp-controller="Courses" class="btn btn-info w-100 mb-1">Szczegóły</a>
                                    <a asp-action="EditCourseHub" asp-route-courseIdentificator="@course.CourseIdentificator" asp-controller="Courses" class="btn btn-warning w-100 mb-1">Edytuj</a>
                                    @if (!course.CourseEnded)
                                    {
                                        <form asp-action="DeleteUsersFromCourse" asp-controller="Courses">
                                            <input value="@Model.UserIdentificator" name="UsersToDeleteFromCourse[0].UserIdentificator" class="form-control col-12" hidden />
                                            <input value="true" name="UsersToDeleteFromCourse[0].IsToDelete" class="form-control col-12" hidden />

                                            <input value="@course.CourseIdentificator" name="CourseIdentificator" class="form-control col-12" hidden />
                                            <input type="submit" value="Usuń użytkownika z kursu" class="btn btn-danger w-100" />
                                        </form>

                                        @*<form asp-action="DeleteUserFromCourse" asp-controller="Courses">
                                                <input value="@Model.UserIdentificator" name="usersIdentificators" class="form-control col-12" hidden />
                                                <input value="@course.CourseIdentificator" name="courseIdentificator" class="form-control col-12" hidden />
                                                <input type="submit" value="Usuń użytkownika z kursu" class="btn btn-danger w-100" />
                                            </form>*@

                                        @*<a asp-action="DeleteUserFromCourse" asp-route-userIdentificator="@Model.UserIdentificator" asp-route-courseIdentificator="@course.CourseIdentificator" asp-controller="Courses" class="btn btn-danger w-100">Usuń użytkownika z kursu</a>*@
                                    }
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie uczęszczał na żaden kurs</div>
}

@section Scripts{
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listGivenCertificates");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listGivenDegrees");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listCourses");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listCompanies");}
}
