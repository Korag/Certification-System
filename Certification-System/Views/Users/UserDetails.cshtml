@model Certification_System.DTOViewModels.UserDetailsViewModel

@{
    ViewData["Title"] = "UserDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Szczegóły użytkownika</h1>
<hr />

<div>

    <h2>Informacje o użytkowniku</h2>

    <div class="mt-3 mb-3">
        @Html.ActionLink("Edytuj", "EditUser", "Users", new { userIdentificator = Model.UserIdentificator }, new { @class = "btn btn-warning" })
    </div>

    <form asp-action="UserDetails">

        <div class="col-md-6 col-xl-6 col-sm-8 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.80">

            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Country" class="control-label"></label>
                <input asp-for="Country" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="PostCode" class="control-label"></label>
                <input asp-for="PostCode" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="NumberOfApartment" class="control-label"></label>
                <input asp-for="NumberOfApartment" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Roles" class="control-label"></label>
                <div>
                    <select asp-for="Roles" disabled data-style="btn-white" data-container="body" data-width="auto" data-header="Wybierz użytkownika" data-live-search="true" title="Nie wybrano żadnego elementu" class="form-control selectpicker show-tick w-100">
                        <option selected></option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label asp-for="Roles" class="control-label"></label>
                <div class="row mb-2 ml-0 mr-0">
                    <div>
                        @foreach (var role in Model.Roles)
                        {
                            <label class="btn btn-secondary align-content-center">
                                <span>@role</span>
                            </label>
                        }
                    </div>
                </div>
            </div>

        </div>
    </form>
</div>

<div class="mt-3">
    @Html.ActionLink("Powrót do listy użytkowników", "DisplayAllUsers", "Users", null, new { @class = "btn btn-info" })
</div>

<h2 class="mt-4 mb-4">Certyfikaty użytkownika</h2>
<div class="mt-4 mb-4">
    @Html.ActionLink("Nadaj nowy certyfikat", "AddNewGivenCertificate", "Certificates", null, new { @class = "btn btn-primary" })
</div>

@if (Model.GivenCertificates.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listGivenCertificates" class="table table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenCertificates.First().GivenCertificateIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenCertificates.First().ReceiptDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenCertificates.First().ExpirationDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenCertificates.First().Certificate.CertificateIndexer) i @Html.DisplayNameFor(model => model.GivenCertificates.First().Certificate.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenCertificates.First().Course.CourseIndexer) i @Html.DisplayNameFor(model => model.GivenCertificates.First().Course.Name)
                    </th>
                    <th>
                        Certyfikat jest ważny ?
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.GivenCertificates)
                {
                    <tr class="alert @if (item.ExpirationDate < DateTime.Now) { <text> table-danger </text>} else { <text> table-success </text> }">
                        <td>
                            @Html.DisplayFor(modelItem => item.GivenCertificateIndexer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReceiptDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ExpirationDate)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Certificate.CertificateIndexer) @Html.DisplayFor(model => item.Certificate.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Course.CourseIndexer) @Html.DisplayFor(model => item.Course.Name)
                        </td>
                        <td style="text-align:center">
                            @if (item.ExpirationDate < DateTime.Now)
                            {
                                <span class="fas fa-times" style="font-size:34px"></span>
                            }
                            else
                            {
                                <span class="fas fa-check-circle" style="font-size:34px"></span>
                            }
                        </td>
                        <td>
                            @Html.ActionLink("Edytuj certyfikat", "EditGivenCertificate", "Certificates", new { givenCertificateIdentificator = item.GivenCertificateIdentificator }, new { @class = "btn btn-warning m-1" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownikowi nie przyznano żadnych certyfikatów</div>
}

<h2 class="mt-4 mb-4">Stopnie zawodowe użytkownika</h2>
<div class="mt-4 mb-4">
    @Html.ActionLink("Nadaj nowy stopień zawodowy", "AddNewGivenDegree", "Degrees", null, new { @class = "btn btn-primary" })
</div>

@if (Model.GivenDegrees.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listGivenDegrees" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenDegrees.First().GivenDegreeIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenDegrees.First().ReceiptDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenDegrees.First().ExpirationDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.GivenDegrees.First().Degree.DegreeIndexer) i @Html.DisplayNameFor(model => model.GivenDegrees.First().Degree.Name)
                    </th>
                    <th>
                        Stopień zawodowy jest ważny ?
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.GivenDegrees)
                {
                    <tr class="alert @if (item.ExpirationDate < DateTime.Now) { <text> table-danger </text>} else { <text> table-success </text> }">
                        <td>
                            @Html.DisplayFor(modelItem => item.GivenDegreeIndexer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ReceiptDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ExpirationDate)
                        </td>
                        <td>
                            @Html.DisplayFor(model => item.Degree.DegreeIndexer) @Html.DisplayFor(model => item.Degree.Name)
                        </td>
                        <td style="text-align:center">
                            @if (item.ExpirationDate < DateTime.Now)
                            {
                                <span class="fas fa-times" style="font-size:34px"></span>
                            }
                            else
                            {
                                <span class="fas fa-check-circle" style="font-size:34px"></span>
                            }
                        </td>
                        <td>
                            @Html.ActionLink("Edytuj stopień zawodowy", "EditGivenDegree", "Degrees", new { givenDegreeIdentificator = item.GivenDegreeIdentificator }, new { @class = "btn btn-warning m-1" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownikowi nie przyznano żadnych stopni zawodowych</div>
}

<h2 class="mt-4 mb-4">Kursy użytkownika</h2>
<div class="mt-4 mb-4">
    @Html.ActionLink("Dodaj nowy kurs", "AddNewCourse", "Courses", null, new { @class = "btn btn-primary" })
</div>

@if (Model.Courses.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="coursesList" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().DateOfStart)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().DateOfEnd)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().EnrolledUsersLimit)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().EnrolledUsersQuantity)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseEnded)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().CourseLength)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Courses.First().Branches)
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Courses)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CourseIndexer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfStart)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateOfEnd)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EnrolledUsersLimit)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.EnrolledUsersQuantity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CourseEnded)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CourseLength)
                        </td>
                        <td>
                            <ul>
                                @foreach (var branch in item.Branches)
                                {
                                    <li>@branch</li>
                                }
                            </ul>
                        </td>
                        <td>
                            @Html.ActionLink("Szczegóły", "CourseDetails", new { courseIdentificator = item.CourseIdentificator }, new { @class = "btn btn-info m-1" })
                            @Html.ActionLink("Edytuj", "EditCourse", new { courseIdentificator = item.CourseIdentificator }, new { @class = "btn btn-warning m-1" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie uczęszczał na żaden kurs</div>
}

<h2 class="mt-4 mb-4">Przedsiębiorstwa powiązane z użytkownikiem</h2>
<div class="mt-4 mb-4">
    @Html.ActionLink("Dodaj nowe przedsiębiorstwo", "AddNewCompany", "Companies", null, new { @class = "btn btn-primary" })
</div>


@if (Model.Companies.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listCompanies" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().CompanyName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Phone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Country)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().PostCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().NumberOfApartment)
                    </th>
                    <th>
                        Rola użytkownika w przesiębiorstwie
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Companies)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CompanyName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Phone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Country)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.City)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PostCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NumberOfApartment)
                        </td>
                        <td>
                            @if (Model.CompanyRoleWorker.Contains(item.CompanyIdentificator))
                            {
                                <p>@Html.DisplayNameFor(model => model.CompanyRoleWorker)</p>
                            }
                            @if (Model.CompanyRoleManager.Contains(item.CompanyIdentificator))
                            {
                                <p>@Html.DisplayNameFor(model => model.CompanyRoleManager)</p>
                            }
                        </td>
                        <td>
                            @Html.ActionLink("Szczegóły", "CompanyDetails", "Companies", new { companyIdentificator = item.CompanyIdentificator }, new { @class = "btn btn-info" })
                            @Html.ActionLink("Aktualizuj", "EditCompany", "Companies", new { companyIdentificator = item.CompanyIdentificator }, new { @class = "btn btn-warning" })
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie jest zrzeszony z żadnym przedsiębiorstwem</div>
}

@section Scripts{
    <script>
        $(document).ready(function () {

            $('#listGivenCertificates').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listGivenDegrees').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#coursesList').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listCompanies').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );
        });
    </script>
}
