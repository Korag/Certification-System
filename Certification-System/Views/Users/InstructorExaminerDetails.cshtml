@model Certification_System.DTOViewModels.InstructorExaminerDetailsViewModel

@{
    ViewData["Title"] = "InstructorExaminerDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Szczegóły instruktora-egzaminatora</h1>
<hr />

<div>

    <h2>Informacje o użytkowniku</h2>

    <div class="row m-0 mt-3 mb-3">
        <a asp-action="EditUser" asp-route-userIdentificator="@Model.UserIdentificator" asp-controller="Users" class="btn btn-primary mt-1 mr-1 xs450px_FloatLeft">Edytuj</a>
        <div class="dropdown p-0 mt-1">
            <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Wyślij email</button>
            <div class="dropdown-menu">
                <a asp-action="SendEmailConfirmationLink" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")" asp-route-userIdentificator="@Model.UserIdentificator" asp-controller="Account" class="btn btn-primary w-100 mb-1">Potwierdzenie adresu email</a>
                <a asp-action="ForceResetUserPassword" asp-route-returnUrl="@($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")" asp-route-userIdentificator="@Model.UserIdentificator" asp-controller="Account" class="btn btn-secondary w-100">Reset hasła</a>
            </div>
        </div>

        <a asp-action="DisplayAllUsers" asp-controller="Users" class="btn btn-outline-info mt-1 xs450px_FloatRight">Powrót do listy użytkowników</a>
    </div>

    <form asp-action="InstructorExaminerDetails">

        <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

            <div class="form-group">
                <label asp-for="Email" class="control-label"></label>
                <input asp-for="Email" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="PhoneNumber" class="control-label"></label>
                <input asp-for="PhoneNumber" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Country" class="control-label"></label>
                <input asp-for="Country" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="PostCode" class="control-label"></label>
                <input asp-for="PostCode" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="NumberOfApartment" class="control-label"></label>
                <input asp-for="NumberOfApartment" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="DateOfBirth" class="control-label"></label>
                <input asp-for="DateOfBirth" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="Roles" class="control-label"></label>
                <div class="row mb-2 ml-0 mr-0">
                    <div>
                        @foreach (var role in Model.Roles)
                        {
                            <label class="btn btn-secondary align-content-center">
                                <span>@role</span>
                            </label>
                        }
                    </div>
                </div>
            </div>

        </div>
    </form>
</div>

<h2 class="mt-4 mb-4">Kursy instruktora-egzaminatora (instruktor)</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddCourseMenu" asp-controller="Courses" class="btn btn-primary">Dodaj kurs</a>
</div>

@if (Model.CoursesInstructor.Count != 0)
{
    @await Component.InvokeAsync("DisplayCourseDataTable", new { courseViewModel = Model.CoursesInstructor, tableIdentificator = "listCoursesAsInstructor", operationSet = 2 })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie uczestniczył w żadnym kursie w charakterze instruktora.</div>
}

<h2 class="mt-4 mb-4">Kursy instruktora-egzaminatora (egzaminatora)</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddCourseMenu" asp-controller="Courses" class="btn btn-primary">Dodaj kurs</a>
</div>

@if (Model.CoursesExaminer.Count != 0)
{
    @await Component.InvokeAsync("DisplayCourseDataTable", new { courseViewModel = Model.CoursesExaminer, tableIdentificator = "listCoursesAsExaminer", operationSet = 2 })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">UUżytkownik nie uczestniczył w żadnym kursie w charakterze egzaminatora.</div>
}

<h2 class="mt-4 mb-4">Spotkania prowadzone przez instruktora</h2>

@if (Model.Meetings.Count != 0)
{
    @await Component.InvokeAsync("DisplayMeetingDataTable", new { meetingViewModel = Model.Meetings, tableIdentificator = "listMeetings", operationSet = 1 })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Instruktor nie został przypisany do żadnego spotkania</div>
}

<h2 class="mt-4 mb-4">Egzaminy egzaminatora</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddExamMenu" asp-controller="Exams" class="btn btn-primary">Dodaj nowy egzamin</a>
</div>

@if (Model.Exams.Count != 0)
{
    @await Component.InvokeAsync("DisplayExamDataTable", new { examViewModel = Model.Exams, tableIdentificator = "listExams", operationSet = 1 })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie przeprowadzał do tej pory żadnego egzaminu.</div>
}

<h2 class="mt-4 mb-4">Tury danych egzaminów egzaminatora</h2>

<div class="mt-4 mb-4">
    <a asp-action="AddExamMenu" asp-controller="Exams" class="btn btn-primary">Dodaj nowy egzamin</a>
</div>

@if (Model.ExamsTerms.Count != 0)
{
    @await Component.InvokeAsync("DisplayExamTermDataTable", new { examTermViewModel = Model.ExamsTerms, tableIdentificator = "listExamsTerms", operationSet = 1 })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie przeprowadzał do tej pory żadnej tury danego egzaminu.</div>
}

@section Scripts{
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listCoursesAsInstructor");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listCoursesAsExaminer");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listMeetings");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listExams");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listExamsTerms");}
}
