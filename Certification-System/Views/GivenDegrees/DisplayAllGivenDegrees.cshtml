@model IEnumerable<Certification_System.DTOViewModels.DisplayGivenDegreeViewModel>

@{
    ViewData["Title"] = "DisplayAllGivenDegrees";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Lista wszystkich nadanych stopni zawodowych</h1>
<hr />

<div class="m-3">
    <a asp-action="AddNewGivenDegree" asp-controller="GivenDegrees" class="btn btn-primary">Przyznaj stopień zawodowy</a>
    <a asp-action="DisplayAllGivenDegrees" asp-controller="GivenDegrees" class="btn btn-outline-info" style="float:right">Powrót do listy nadanych stopni zawodowych</a>
</div>

<div class="col-12 table-responsive">
    <table id="listGivenDegrees" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.GivenDegreeIndexer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceiptDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExpirationDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Degree.DegreeIndexer) i @Html.DisplayNameFor(model => model.Degree.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.User.FirstName) i @Html.DisplayNameFor(model => model.User.LastName)
                </th>
                <th>
                    Operacje
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var givenDegree in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => givenDegree.GivenDegreeIndexer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => givenDegree.ReceiptDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => givenDegree.ExpirationDate)
                    </td>
                    <td>
                        @Html.DisplayFor(model => givenDegree.Degree.DegreeIndexer) @Html.DisplayFor(model => givenDegree.Degree.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(model => givenDegree.User.FirstName) @Html.DisplayFor(model => givenDegree.User.LastName)
                    </td>
                    <td>
                        <div class="dropdown p-0">
                            <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                            <div class="dropdown-menu">
                                <a asp-action="GivenDegreeDetails" asp-route-givenDegreeIdentificator="@givenDegree.GivenDegreeIdentificator" asp-controller="GivenDegrees" class="btn btn-info w-100 mb-1">Szczegóły nadanego stopnia zawodowego</a>
                                <a asp-action="UserDetails" asp-route-userIdentificator="@givenDegree.User.UserIdentificator" asp-controller="Users" class="btn btn-secondary w-100 mb-1">Szczegóły użytkownika</a>
                                <a asp-action="EditGivenDegree" asp-route-givenDegreeIdentificator="@givenDegree.GivenDegreeIdentificator" asp-controller="GivenDegrees" class="btn btn-warning w-100">Edytuj stopień zawodowy</a>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {

            $('#listGivenDegrees').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );
        });
    </script>
}
