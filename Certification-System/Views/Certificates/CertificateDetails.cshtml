@model Certification_System.DTOViewModels.CertificateDetailsViewModel

@{
    ViewData["Title"] = "CertificateDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var deleteParams = new Dictionary<string, string>
            {
                { "certificateIdentificator", Model.CertificateIdentificator },
                { "returnUrl", ($"{Context.Request.Scheme}://{Context.Request.Host}{Context.Request.Path}{Context.Request.QueryString}")}
            };
}

<h1>Szczegóły certyfikatu</h1>
<hr />

<div>
    <h2>Informacje o certyfikacie</h2>

    <div class="row m-0 mt-3 mb-3">
        <a asp-action="EditCertificate" asp-route-certificateIdentificator="@Model.CertificateIdentificator" asp-controller="Certificates" class="btn btn-warning mt-1 mr-1 xs350px_FloatLeft">Edytuj</a>
        <i class="fas fa-times mt-1 mr-1 icon-hover xs350px_FloatLeft" data-toggle="modal" data-target="#modal"></i>
        @await Component.InvokeAsync("Modal", new { Title = "Usuwanie certyfikatu", Body = "Czy na pewno chcesz usunąć ten certyfikat wraz ze wszystkimi jego zależnościami ?", Action = "DeleteCertificateHub", Controller = "Certificates", Arguments = deleteParams, ButtonText = "Usuń", ButtonClass = "btn-danger" })

        <a asp-action="DisplayAllCertificates" asp-controller="Certificates" class="btn btn-outline-info mt-1 xs350px_FloatRight">Powrót do listy certyfikatów</a>
    </div>

    <form>
        <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

            <div class="form-group">
                <label asp-for="CertificateIndexer" class="control-label"></label>
                <input asp-for="CertificateIndexer" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control col-12" style="width:100%; min-width:100%;" readonly></textarea>
            </div>

            <div class="form-group">
                <label asp-for="Depreciated" class="control-label"></label>
                <div class="row pl-3">
                    <input type="checkbox" asp-for="Depreciated" class="form-control col-12" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                </div>
            </div>

            <div class="form-group mb-0">
                <label asp-for="Branches" class="control-label"></label>
                <div class="row ml-0 mr-0">
                    <div>
                        @foreach (var branch in Model.Branches)
                        {
                            <label class="btn btn-secondary align-content-center">
                                <span>@branch</span>
                            </label>
                        }
                    </div>
                </div>
            </div>

        </div>
    </form>
</div>

<h2 class="mt-4 mb-4">Użytkownicy posiadający certyfikat</h2>

@if (Model.UsersWithCertificate.Count != 0)
{
    @await Component.InvokeAsync("DisplayCrucialDataWithCompaniesRoleUserDataTable", new { userViewModel = Model.UsersWithCertificate, tableIdentificator = "listUsers", operationSet = 1 })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Brak użytkowników posiadających dany certyfikat</div>
}

<h2 class="mt-4 mb-4">Kursy, które zakończyły się przyznaniem tego typu certyfikatu</h2>

@if (Model.CoursesWhichEndedWithCertificate.Count != 0)
{
    @await Component.InvokeAsync("DisplayCourseDataTable", new { courseViewModel = Model.CoursesWhichEndedWithCertificate, tableIdentificator = "listCourses", operationSet = 1 })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Brak kursów, które zakończyły się nadaniem takiego certyfikatu</div>
}

@section Scripts {
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listUsers");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listCourses");}
}
