@model Certification_System.DTOViewModels.DisplayMeetingViewModel
@using Certification_System.DTOViewModels

@{
    ViewData["Title"] = "ConfirmationOfActionOnMeeting";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewBag.TypeOfAction == "Update")
{
    <h2 class="alert alert-info" role="alert">Zaktualizowano spotkanie w ramach kursu:</h2>
}
else
{
    <h2 class="alert alert-success" role="alert">Dodano następujące spotkanie:</h2>
}

<div class="row m-0 mt-3 mb-3">
    <a asp-action="AddNewMeeting" asp-controller="Meetings" class="btn btn-primary mt-1 xs450px_FloatLeft">Dodaj spotkanie</a>
    <a asp-action="DisplayAllMeetings" asp-controller="Meetings" class="btn btn-outline-info mt-1 xs450px_FloatRight">Powrót do listy spotkań</a>
</div>

@{List<DisplayMeetingViewModel> meetingList = new List<DisplayMeetingViewModel>();
    meetingList.Add(Model);}

@await Component.InvokeAsync("DisplayMeetingDataTable", new { meetingViewModel = meetingList, tableIdentificator = "meetingConfirmation" })

<div class="row m-0 mt-3">
    <a asp-action="MeetingDetails" asp-route-meetingIdentificator="@Model.MeetingIdentificator" asp-controller="Meetings" class="btn btn-info mt-1 mr-1">Szczegóły</a>
    <a asp-action="EditMeeting" asp-route-meetingIdentificator="@Model.MeetingIdentificator" asp-controller="Meetings" class="btn btn-warning mt-1 mr-1">Edytuj</a>
</div>

@section Scripts{
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "meetingConfirmation");}
}
