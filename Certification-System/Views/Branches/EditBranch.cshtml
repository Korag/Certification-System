@model Certification_System.DTOViewModels.EditBranchViewModel

@{
    ViewData["Title"] = "EditBranch";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edytuj obszar certyfikacji</h2>
<hr />

<div>
    <form asp-action="EditBranch">

        <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

            <input asp-for="BranchIdentificator" class="form-control col-12" hidden readonly/>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <div>
                    <input asp-for="Name" class="form-control col-12" />
                    <div class="row justify-content-center">
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div asp-validation-summary="ModelOnly" class="row justify-content-center alert alert-danger validation-model"></div>

            <div class="row m-0 mt-3">
                <button type="button" class="btn btn-primary mt-1 xs300px_JustifyContentCenter" data-toggle="modal" data-target="#modal">Edytuj</button>
                <a asp-action="DisplayAllBranches" asp-controller="Branches" class="btn btn-outline-info mt-1 xs300px_FloatRight">Powrót do listy</a>
            </div>

        </div>

        @await Component.InvokeAsync("Modal", new { Title = "Edycja nazwy obszaru certyfikacji", Body = "Czy na pewno chcesz zaktualizować nazwę wybranego obszaru certyfikacji ?", FormSubmit = true, ButtonText = "Edytuj", ButtonClass = "btn-warning" })

    </form>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

