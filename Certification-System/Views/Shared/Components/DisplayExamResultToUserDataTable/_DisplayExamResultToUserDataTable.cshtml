@model Certification_System.DTOViewModels.DisplayExamResultToUserDataTableViewModel

@{
    var i = 0;
}

<div class="col-12 table-responsive">
    <table id="@Model.Options.TableIdentificator" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().Exam.ExamIndexer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().Exam.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().Exam.OrdinalNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().Exam.TypeOfExam)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().Exam.DateOfStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().Exam.DateOfEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().ExamTerm)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().ExamResultIndexer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().PointsEarned)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().MaxAmountOfPointsToEarn)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().PercentageOfResult)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExamsResults.FirstOrDefault().ExamPassed)
                </th>
                @if (Model.Options.OperationSet != 0)
                {
                    <th>
                        Operacje
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var examResult in Model.ExamsResults)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => examResult.Exam.ExamIndexer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examResult.Exam.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examResult.Exam.OrdinalNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examResult.Exam.TypeOfExam)
                    </td>
                    @if (examResult.ExamTerm == null)
                    {
                        <td>
                            @Html.DisplayFor(modelItem => examResult.Exam.DateOfStart)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => examResult.Exam.DateOfEnd)
                        </td>
                    }
                    else
                    {
                        <td>
                            @Html.DisplayFor(modelItem => examResult.ExamTerm.DateOfStart)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => examResult.ExamTerm.DateOfEnd)
                        </td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => examResult.ExamTerm.ExamTermIndexer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examResult.ExamResultIndexer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examResult.PointsEarned)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examResult.MaxAmountOfPointsToEarn)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => examResult.PercentageOfResult)
                    </td>
                    <td>
                        <input type="checkbox" asp-for="@examResult.ExamPassed" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                    </td>
                    @if (Model.Options.OperationSet == 1)
                    {
                        <td>
                            @if (examResult.ExamTerm == null)
                            {
                                <a asp-action="ExamDetails" asp-route-examIdentificator="@examResult.Exam.ExamIdentificator" asp-controller="Exams" class="btn btn-info m-1">Szczegóły egzaminu</a>
                            }
                            else
                            {
                                <div class="dropdown p-0">
                                    <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                    <div class="dropdown-menu nohover">
                                        <a asp-action="ExamDetails" asp-route-examIdentificator="@examResult.Exam.ExamIdentificator" asp-controller="Exams" class="btn btn-info w-100 mb-1">Szczegóły egzaminu</a>
                                        <a asp-action="ExamTermDetails" asp-route-examTermIdentificator="@examResult.ExamTerm.ExamTermIdentificator" asp-controller="ExamsTerms" class="btn btn-secondary w-100">Szczegóły tury egzaminu</a>
                                    </div>
                                </div>
                            }
                        </td>
                    }
                    @if (Model.Options.OperationSet == 2 && examResult.CanUserResignFromExam)
                    {
                        var deleteParams = new Dictionary<string, string>
                                           {
                                           { "examResultIdentificator", examResult.ExamResultIdentificator }
                                           };

                        var modalDataTarget = "modal" + i;

                        <td>
                            @if (examResult.ExamTerm == null)
                            {
                                <div class="dropdown p-0">
                                    <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                    <div class="dropdown-menu nohover">
                                        <a asp-action="WorkerExamDetails" asp-route-examIdentificator="@examResult.Exam.ExamIdentificator" asp-controller="Exams" class="btn btn-info w-100 mb-1">Szczegóły egzaminu</a>
                                        <a asp-action="ResignFromExam" asp-route-examIdentificator="@examResult.Exam.ExamIdentificator" asp-controller="Exams" data-toggle="modal" data-target="#@modalDataTarget" class="btn btn-danger w-100">Zrezygnuj</a>
                                    </div>
                                </div>

                                @await Component.InvokeAsync("Modal", new {
                                 DataTarget = modalDataTarget, Title = "Rezygnacja z uczestnictwa w egzaminie", Body = "Czy na pewno chcesz zrezygnować z uczestnictwa w wybranym egzaminie ? Twoja akcja zwolni wolne miejsce na egzaminie przez co inni użytkownicy będą szansę się na niego zapisać. W przypadku zrezygnowania i próbie ponownego zapisania nie można odzyskać uprzednio oddanego miejsca.", Action = "ResignFromExam", Controller = "Exams", Arguments = deleteParams, ButtonText = "Zrezygnuj", ButtonClass = "btn-danger" })
                            }
                            else
                            {
                                <div class="dropdown p-0">
                                    <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                    <div class="dropdown-menu nohover">
                                        <a asp-action="WorkerExamDetails" asp-route-examIdentificator="@examResult.Exam.ExamIdentificator" asp-controller="Exams" class="btn btn-info w-100 mb-1">Szczegóły egzaminu</a>
                                        <a asp-action="WorkerExamTermDetails" asp-route-examTermIdentificator="@examResult.ExamTerm.ExamTermIdentificator" asp-controller="ExamsTerms" class="btn btn-secondary w-100 mb-1">Szczegóły tury egzaminu</a>
                                        <a asp-action="ResignFromExam" asp-route-examTermIdentificator="@examResult.ExamTerm.ExamTermIdentificator" asp-controller="Exams" class="btn btn-danger w-100">Zrezygnuj</a>
                                    </div>
                                </div>
                            }
                        </td>
                        i++;
                    }
                    else if (Model.Options.OperationSet == 2)
                    {
                        <td>
                            @if (examResult.ExamTerm == null)
                            {
                                <a asp-action="WorkerExamDetails" asp-route-examIdentificator="@examResult.Exam.ExamIdentificator" asp-controller="Exams" class="btn btn-info m-1">Szczegóły egzaminu</a>
                            }
                            else
                            {
                                <a asp-action="WorkerExamDetails" asp-route-examIdentificator="@examResult.Exam.ExamIdentificator" asp-controller="Exams" class="btn btn-info m-1">Szczegóły egzaminu</a>
                                <a asp-action="WorkerExamTermDetails" asp-route-examTermIdentificator="@examResult.ExamTerm.ExamTermIdentificator" asp-controller="ExamsTerms" class="btn btn-secondary m-1">Szczegóły tury egzaminu</a>
                            }
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>