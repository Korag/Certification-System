@model Certification_System.DTOViewModels.DisplayRejectedUsersFromCourseQueueLogDataTableViewModel

<div class="col-12 table-responsive">
    <table id="@Model.Options.TableIdentificator" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Logs.FirstOrDefault().Course.CourseIndexer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Logs.FirstOrDefault().Course.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Logs.FirstOrDefault().Course.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Logs.FirstOrDefault().User.Email)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Logs.FirstOrDefault().User.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Logs.FirstOrDefault().User.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Logs.FirstOrDefault().DateOfAssignToCourseQueue)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Logs.FirstOrDefault().DateOfRejection)
                </th>
                @if (Model.Options.OperationSet != 0)
                {
                    <th>
                        Operacje
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var rejectedUser in Model.Logs)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => rejectedUser.Course.CourseIndexer)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => rejectedUser.Course.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => rejectedUser.Course.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => rejectedUser.User.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => rejectedUser.User.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => rejectedUser.User.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => rejectedUser.DateOfAssignToCourseQueue)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => rejectedUser.DateOfRejection)
                </td>
                @if (Model.Options.OperationSet == 1)
                {
                    <td>
                        <div class="dropdown p-0">
                            <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                            <div class="dropdown-menu nohover">
                                <a asp-action="UserDetails" asp-route-userIdentificator="@rejectedUser.Course.CourseIdentificator"  asp-controller="Users" class="btn btn-info w-100 mb-1">Szczegóły użytkownika</a>
                                <a asp-action="CourseDetails" asp-route-courseIdentificator="@rejectedUser.User.UserIdentificator"  asp-controller="Courses" class="btn btn-secondary w-100">Szczegóły kursu</a>
                            </div>
                        </div>
                    </td>
                }
            </tr>
            }
        </tbody>
    </table>
</div>
