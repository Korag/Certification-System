@model Certification_System.DTOViewModels.DisplayGivenCertificateDataTableViewModel

<div class="col-12 table-responsive">
    <table id="@Model.Options.TableIdentificator" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.GivenCertificates.FirstOrDefault().GivenCertificateIndexer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GivenCertificates.FirstOrDefault().ReceiptDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GivenCertificates.FirstOrDefault().ExpirationDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GivenCertificates.FirstOrDefault().Certificate.CertificateIndexer) i @Html.DisplayNameFor(model => model.GivenCertificates.FirstOrDefault().Certificate.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.GivenCertificates.FirstOrDefault().User.FirstName) i @Html.DisplayNameFor(model => model.GivenCertificates.FirstOrDefault().User.LastName)
                </th>
                @if (Model.Options.OperationSet != 0)
                {
                    <th>
                        Operacje
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var givenCertificate in Model.GivenCertificates)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => givenCertificate.GivenCertificateIndexer)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => givenCertificate.ReceiptDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => givenCertificate.ExpirationDate)
                    </td>
                    <td>
                        @Html.DisplayFor(model => givenCertificate.Certificate.CertificateIndexer) @Html.DisplayFor(model => givenCertificate.Certificate.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(model => givenCertificate.User.FirstName) @Html.DisplayFor(model => givenCertificate.User.LastName)
                    </td>
                    @if (Model.Options.OperationSet == 1)
                    {
                        <td>
                            <div class="dropdown p-0">
                                <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                <div class="dropdown-menu nohover">
                                    <a asp-action="GivenCertificateDetails" asp-route-givenCertificateIdentificator="@givenCertificate.GivenCertificateIdentificator" asp-controller="GivenCertificates" class="btn btn-primary w-100 mb-1">Szczegóły nadanego certyfikatu</a>
                                    <a asp-action="UserDetails" asp-route-userIdentificator="@givenCertificate.User.UserIdentificator" asp-controller="Users" class="btn btn-info w-100 mb-1">Szczegóły użytkownika</a>
                                    <a asp-action="CourseDetails" asp-route-courseIdentificator="@givenCertificate.Course.CourseIdentificator" asp-controller="Courses" class="btn btn-secondary w-100 mb-1">Szczegóły kursu</a>
                                    <a asp-action="EditGivenCertificate" asp-route-givenCertificateIdentificator="@givenCertificate.GivenCertificateIdentificator" asp-controller="GivenCertificates" class="btn btn-warning  w-100">Edytuj certyfikat</a>
                                </div>
                            </div>
                        </td>
                    }
                </tr>
            }
        </tbody>
    </table>
</div>