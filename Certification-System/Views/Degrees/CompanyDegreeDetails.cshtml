@model Certification_System.DTOViewModels.CompanyDegreeDetailsViewModel
@using Certification_System.DTOViewModels

@{
    ViewData["Title"] = "CompanyDegreeDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .bootstrap-tagsinput {
        background-color: #e9ecef;
    }
</style>

<h1>Szczegóły stopni zawodowych posiadanych przez wybranych pracowników</h1>
<hr />

<div>
    <h2>Informacje o stopniu zawodowym</h2>

    <form asp-action="CompanyDegreeDetails">

        <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

            <div class="form-group">
                <label asp-for="DegreeIndexer" class="control-label"></label>
                <input asp-for="DegreeIndexer" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control col-12" style="width:100%; min-width:100%;" readonly></textarea>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control col-12" style="width:100%; min-width:100%;" readonly></textarea>
            </div>

            <div class="form-group">
                <label asp-for="ConditionsList" class="control-label"></label>
                <input asp-for="ConditionsList" class="form-control col-12" style="width:100%; min-width:100%;" id="tagInput" data-role="tagsinput" readonly />
            </div>

            <div class="form-group mb-0">
                <label asp-for="Branches" class="control-label"></label>
                <div class="row ml-0 mr-0">
                    <div>
                        @foreach (var branch in Model.Branches)
                        {
                            <label class="btn btn-secondary align-content-center">
                                <span>@branch</span>
                            </label>
                        }
                    </div>
                </div>
            </div>

        </div>

    </form>
</div>

<h2 class="mt-4 mb-4">Certyfikaty wymagane do uzyskania stopnia zawodowego</h2>

@if (Model.RequiredCertificates.Count != 0)
{
    @await Component.InvokeAsync("DisplayCertificateDataTable", new { certificateViewModel = Model.RequiredCertificates, tableIdentificator = "listRequiredCertificates", operationSet = 2 })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Do nadania stopnia zawodowego nie jest wymagane posiadanie jakiegokolwiek certyfikatu</div>
}

<h2 class="mt-4 mb-4">Stopnie zawodowe wymagane do uzyskania stopnia zawodowego</h2>

@if (Model.RequiredDegrees.Count != 0)
{
    @await Component.InvokeAsync("DisplayDegreeDataTable", new { degreeViewModel = Model.RequiredDegrees, tableIdentificator = "listRequiredDegrees", operationSet = 2 })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Do nadania stopnia zawodowego nie jest wymagane posiadanie jakiegokolwiek stopnia zawodowego</div>
}

<h2 class="mt-4 mb-4">Pracownicy przedsiębiorstwa posiadający stopień zawodowy</h2>

@if (Model.UsersWithDegree.Count != 0)
{
    @await Component.InvokeAsync("DisplayCrucialDataUserDataTable", new { userViewModel = Model.UsersWithDegree, tableIdentificator = "listUsers", operationSet = 2 })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Brak użytkowników posiadających dany stopień zawodowy</div>
}

@section Scripts{
    @{await Html.RenderPartialAsync("_DataTableBasicScript", new DataTableInitializationViewModel("listUsers", new int[] { }, 80, true));}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", new DataTableInitializationViewModel("listRequiredCertificates", new int[] { }, 80, true));}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", new DataTableInitializationViewModel("listRequiredDegrees", new int[] { }, 80, true));}
}