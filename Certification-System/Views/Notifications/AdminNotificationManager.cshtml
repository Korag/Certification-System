@model Certification_System.DTOViewModels.AdminNotificationViewModel

@{
    ViewData["Title"] = "AdminNotificationManager";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Panel powiadomień</h1>
<hr />

@if (!string.IsNullOrWhiteSpace(ViewBag.message))
{
    <h2 class="alert alert-info" role="alert">@ViewBag.message</h2>
}

<div class="row m-0 mt-3 mb-3">
    <a asp-action="RejectedUsersFromCourseQueueNotificationManager" asp-controller="Notifications" class="btn btn-info mt-1 mr-1 xs450px_FloatLeft">Niezaakceptowane wnioski</a>
</div>

<h2 class="mt-4 mb-4">Zgłoszenia użytkowników na kurs</h2>

@await Component.InvokeAsync("DisplayCourseQueueWithDecisionDataTable", new { courseViewModel = Model.CourseQueueNotification, tableIdentificator = "listCourseQueue", operationSet = 1 })

<h2 class="mt-4 mb-4">Niezakończone kursy po terminie</h2>

@await Component.InvokeAsync("DisplayCourseNotificationDataTable", new { courseViewModel = Model.NotEndedCoursesAfterEndDate, tableIdentificator = "listNotEndedCourse", operationSet = 1 })

<h2 class="mt-4 mb-4">Logi aplikacji</h2>

@await Component.InvokeAsync("DisplayUserPersonalLogDataTable", new { logViewModel = Model.OverallLogs, tableIdentificator = "listNotifications" })

@section Scripts {
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listCourseQueue");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listNotEndedCourse");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listNotifications");}
}
