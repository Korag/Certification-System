@model Certification_System.DTOViewModels.DisplayGivenCertificateViewModel
@using Certification_System.DTOViewModels

@{
    ViewData["Title"] = "ConfirmationOfActionOnGivenCertificate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (ViewBag.TypeOfAction == "Update")
{
    <h2 class="alert alert-info" role="alert">Zaktualizowano nadany certyfikat:</h2>
}
else
{
    <h2 class="alert alert-success" role="alert">Przyznano następujący certyfikat:</h2>
}

<div class="row m-0 mt-3 mb-3">
    <a asp-action="AddNewGivenCertificate" asp-controller="GivenCertificates" class="btn btn-primary mt-1 xs450px_FloatLeft">Przyznaj nowy certyfikat</a>
    <a asp-action="DisplayAllGivenCertificates" asp-controller="GivenCertificates" class="btn btn-outline-info mt-1 xs450px_FloatRight">Powrót do listy nadanych certyfikatów</a>
</div>

@{List<DisplayGivenCertificateViewModel> givenCertificateList = new List<DisplayGivenCertificateViewModel>();
    givenCertificateList.Add(Model);}

@await Component.InvokeAsync("DisplayGivenCertificateDataTable", new { givenCertificateViewModel = givenCertificateList, tableIdentificator = "givenCertificateConfirmation" })


@section Scripts{
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "givenCertificateConfirmation");}
}
