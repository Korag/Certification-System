@model Certification_System.DTOViewModels.GivenCertificateDetailsViewModel
@{
    ViewData["Title"] = "GivenCertificateDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Szczegóły nadanego certyfikatu</h1>
<hr />

<div>

    <h2>Informacje o użytkowniku</h2>

    <div class="row m-0 mt-3 mb-3">
        <a asp-action="EditUser" asp-route-userIdentificator="@Model.User.UserIdentificator" asp-controller="Users" class="btn btn-warning mt-1 md650px_FloatLeft">Edytuj</a>
        <a asp-action="UserDetails" asp-route-userIdentificator="@Model.User.UserIdentificator" asp-controller="Users" class="btn btn-info mt-1 md650px_FloatLeft">Szczegóły</a>
        <a asp-action="DisplayAllGivenCertificates" asp-controller="GivenCertificates" class="btn btn-outline-info mt-1 md650px_FloatRight">Powrót do listy nadanych certyfikatów</a>
    </div>

    <form>

        <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

            <div class="form-group">
                <label asp-for="User.Email" class="control-label"></label>
                <input asp-for="User.Email" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.FirstName" class="control-label"></label>
                <input asp-for="User.FirstName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.LastName" class="control-label"></label>
                <input asp-for="User.LastName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.PhoneNumber" class="control-label"></label>
                <input asp-for="User.PhoneNumber" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.Country" class="control-label"></label>
                <input asp-for="User.Country" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.City" class="control-label"></label>
                <input asp-for="User.City" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.PostCode" class="control-label"></label>
                <input asp-for="User.PostCode" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.Address" class="control-label"></label>
                <input asp-for="User.Address" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.NumberOfApartment" class="control-label"></label>
                <input asp-for="User.NumberOfApartment" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.DateOfBirth" class="control-label"></label>
                <input asp-for="User.DateOfBirth" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.Roles" class="control-label"></label>
                <div class="row mb-2 ml-0 mr-0">
                    <div>
                        @foreach (var role in Model.User.Roles)
                        {
                            <label class="btn btn-secondary align-content-center">
                                <span>@role</span>
                            </label>
                        }
                    </div>
                </div>
            </div>

        </div>
    </form>

</div>

<h2 class="mt-4 mb-4">Przedsiębiorstwa powiązane z użytkownikiem</h2>

@if (Model.Companies.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listCompanies" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().CompanyName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Phone)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Country)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().PostCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Companies.First().NumberOfApartment)
                    </th>
                    <th>
                        Rola użytkownika w przesiębiorstwie
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var company in Model.Companies)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => company.CompanyName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.Phone)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.Country)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.City)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.PostCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => company.NumberOfApartment)
                        </td>
                        <td>
                            @if (Model.User.CompanyRoleWorker.Contains(company.CompanyIdentificator))
                            {
                                <p>@Html.DisplayNameFor(model => model.User.CompanyRoleWorker)</p>
                            }
                            @if (Model.User.CompanyRoleManager.Contains(company.CompanyIdentificator))
                            {
                                <p>@Html.DisplayNameFor(model => model.User.CompanyRoleManager)</p>
                            }
                        </td>
                        <td>
                            <div class="dropdown p-0">
                                <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                <div class="dropdown-menu">
                                    <a asp-action="EditCompany" asp-route-companyIdentificator="@company.CompanyIdentificator" asp-controller="Companies" class="btn btn-warning w-100 mb-1">Edytuj</a>
                                    <a asp-action="CompanyDetails" asp-route-companyIdentificator="@company.CompanyIdentificator" asp-controller="Companies" class="btn btn-info w-100">Szczegóły</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie jest zrzeszony z żadnym przedsiębiorstwem</div>
}

<h2 class="mt-4 mb-4">Szczegóły nadanego certyfikatu</h2>

<div class="row m-0 mt-3 mb-3">
    <a asp-action="EditGivenCertificate" asp-route-givenCertificateIdentificator="@Model.GivenCertificateIdentificator" asp-controller="GivenCertificates" class="btn btn-warning mt-1 mr-1">Edytuj certyfikat</a>
    <a asp-action="CertificateDetails" asp-route-certificateIdentificator="@Model.Certificate.CertificateIdentificator" asp-controller="Certificates" class="btn btn-info mt-1 mr-1">Szczegóły certyfikatu</a>
    <a asp-action="GivenCertificateDetails" asp-route-givenCertificateIdentificator="@Model.GivenCertificateIdentificator" asp-controller="GivenCertificates" class="btn btn-secondary mt-1 mr-1">Szczegóły przyznanego certyfikatu</a>
</div>

<div class="col-12 table-responsive">
    <table id="listGivenCertificate" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.GivenCertificateIndexer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ReceiptDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ExpirationDate)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Certificate.CertificateIndexer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Certificate.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Certificate.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Certificate.Depreciated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Certificate.Branches)
                </th>
                <th>
                    Stopień zawodowy jest ważny ?
                </th>
            </tr>
        </thead>
        <tbody>
            <tr class="alert @if (Model.ExpirationDate < DateTime.Now) { <text> table-danger </text>} else { <text> table-success </text> }">
                <td>
                    @Html.DisplayFor(model => model.GivenCertificateIndexer)
                </td>
                <td>
                    @Html.DisplayFor(model => model.ReceiptDate)
                </td>
                <td>
                    @Html.DisplayFor(model => model.ExpirationDate)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Certificate.CertificateIndexer)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Certificate.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Certificate.Description)
                </td>
                <td>
                    <input type="checkbox" asp-for="Certificate.Depreciated" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                </td>
                <td>
                    <div class="btn-group btn-group-toggle row" data-toggle="buttons">
                        @foreach (var branch in Model.Certificate.Branches)
                        {
                            <label class="btn btn-outline-secondary m-2 active">
                                <input type="checkbox"
                                       name="SelectedBranches"
                                       value="@branch"
                                       autocomplete="off"
                                       disabled
                                       checked />
                                <span>@branch</span>
                            </label>
                        }
                    </div>
                </td>
                <td style="text-align:center">
                    @if (Model.ExpirationDate < DateTime.Now)
                    {
                        <span class="fas fa-times" style="font-size:34px"></span>
                    }
                    else
                    {
                        <span class="fas fa-check-circle" style="font-size:34px"></span>
                    }
                </td>
            </tr>
        </tbody>
    </table>
</div>

<h2 class="mt-4 mb-4">Dane kursu</h2>

<div class="col-12 table-responsive">
    <table id="listCourses" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Course.CourseIndexer)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Course.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Course.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Course.DateOfStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Course.DateOfEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Course.EnrolledUsersLimit)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Course.EnrolledUsersQuantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Course.ExamIsRequired)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Course.CourseEnded)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Course.CourseLength)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Course.Branches)
                </th>
                <th>
                    Operacje
                </th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>
                    @Html.DisplayFor(model => model.Course.CourseIndexer)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Course.Name)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Course.Description)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Course.DateOfStart)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Course.DateOfEnd)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Course.EnrolledUsersLimit)
                </td>
                <td>
                    @Html.DisplayFor(model => model.Course.EnrolledUsersQuantity)
                </td>
                <td>
                    <input type="checkbox" asp-for="Course.ExamIsRequired" class="form-control col-12" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                </td>
                <td>
                    <input type="checkbox" asp-for="Course.CourseEnded" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                </td>
                <td>
                    @Html.DisplayFor(model => model.Course.CourseLength)
                </td>
                <td>
                    <ul>
                        @foreach (var branch in Model.Course.Branches)
                        {
                            <li>@branch</li>
                        }
                    </ul>
                </td>
                <td>
                    <div class="dropdown p-0">
                        <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                        <div class="dropdown-menu">
                            <a asp-action="CourseDetails" asp-route-courseIdentificator="@Model.Course.CourseIdentificator" asp-controller="Courses" class="btn btn-info w-100 mb-1">Szczegóły</a>
                            <a asp-action="EditCourseHub" asp-route-courseIdentificator="@Model.Course.CourseIdentificator" asp-controller="Courses" class="btn btn-warning w-100">Edytuj</a>
                        </div>
                    </div>
                </td>
            </tr>
        </tbody>
    </table>
</div>

<h2 class="mt-4 mb-4">Spotkania w ramach kursu</h2>

@if (Model.Meetings.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listMeetings" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().MeetingIndexer)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().Description)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().DateOfMeeting)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().Country)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().City)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().PostCode)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().Address)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().NumberOfApartment)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Meetings.First().Instructors)
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var meeting in Model.Meetings)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.MeetingIndexer)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.DateOfMeeting)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.Country)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.City)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.PostCode)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => meeting.NumberOfApartment)
                        </td>
                        <td>
                            <ul>
                                @foreach (var instructor in meeting.Instructors)
                                {
                                    <li>@instructor</li>
                                }
                            </ul>
                        </td>
                        <td>
                            <div class="dropdown p-0">
                                <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                <div class="dropdown-menu">
                                    <a asp-action="MeetingDetails" asp-route-meetingIdentificator="@meeting.MeetingIdentificator" asp-controller="Users" class="btn btn-info w-100 mb-1">Szczegóły spotkania</a>
                                    <a asp-action="EditMeeting" asp-route-meetingIdentificator="@meeting.MeetingIdentificator" asp-controller="Users" class="btn btn-warning w-100 mb-1">Edytuj spotkanie</a>
                                    <a asp-action="CheckUsersPresence" asp-route-meetingIdentificator="@meeting.MeetingIdentificator" asp-controller="Users" class="btn btn-primary w-100">Sprawdź obecność</a>
                                    @*@Html.ActionLink("Szczegóły instruktora", "InstructorDetail", new { instructorIdentificator = item.Instructors }, new { @class = "btn btn-secondary" })*@
                                    @*@Html.ActionLink("Usuń spotkanie ze szkolenia", "DeleteMeeting", new { meetingIdentificator = item.MeetingIdentificator }) |*@
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Kurs nie posiada zdefiniowanych spotkań</div>
}

<h2 class="mt-4 mb-4">Instruktorzy przeprowadzający kurs</h2>

@if (Model.Instructors.Count != 0)
{
    <div class="col-12 table-responsive">
        <table id="listInstructors" class="table table-striped table-bordered display" style="width: 100%;" role="grid">
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Instructors.First().FirstName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Instructors.First().LastName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Instructors.First().Email)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Instructors.First().PhoneNumber)
                    </th>
                    <th>
                        Operacje
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var instructor in Model.Instructors)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => instructor.FirstName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => instructor.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => instructor.Email)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => instructor.PhoneNumber)
                        </td>
                        <td>
                            <div class="dropdown p-0">
                                <button class="btn btn-success dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Operacje</button>
                                <div class="dropdown-menu">
                                    <a asp-action="InstructorDetails" asp-route-instructorIdentificator="@instructor.UserIdentificator" asp-controller="Users" class="btn btn-info w-100 mb-1">Szczegóły</a>
                                    <a asp-action="EditUser" asp-route-userIdentificator="@instructor.UserIdentificator" asp-controller="Users" class="btn btn-warning w-100">Aktualizuj</a>
                                </div>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

else
{
    <div class="mt-4 mb-4 alert alert-warning">Brak instruktorów przypisanych do spotkania</div>
}

@section Scripts{
    <script>
        $(document).ready(function () {

            $('#listGivenCertificate').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listCompanies').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listCourses').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listMeetings').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );

            $('#listInstructors').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.19/i18n/Polish.json"
                },
            }
            );
        });
    </script>
}
