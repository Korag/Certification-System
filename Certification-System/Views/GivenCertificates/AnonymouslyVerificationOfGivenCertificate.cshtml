@model Certification_System.DTOViewModels.GivenCertificateDetailsForAnonymousViewModel
@using Certification_System.DTOViewModels

@{
    ViewData["Title"] = "AnonymouslyVerificationOfGivenCertificate";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Weryfikacja certyfikatu</h1>
<hr />

<div>
    <h2>Informacje o użytkowniku</h2>

    <div class="mt-3 mb-3">
        <a asp-action="VerifyCompetenceManual" asp-controller="CompetenceVerification" class="btn btn-outline-info">Powrót do panelu weryfikacji</a>
    </div>

    <form asp-action="AnonymouslyVerificationOfGivenCertificate">

        <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

            <div class="form-group">
                <label asp-for="User.FirstName" class="control-label"></label>
                <input asp-for="User.FirstName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.LastName" class="control-label"></label>
                <input asp-for="User.LastName" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.Email" class="control-label"></label>
                <input asp-for="User.Email" class="form-control col-12" disabled />
            </div>

            <div class="form-group">
                <label asp-for="User.DateOfBirth" class="control-label"></label>
                <input asp-for="User.DateOfBirth" class="form-control col-12" disabled />
            </div>

        </div>

    </form>
</div>

<h2 class="mt-4 mb-4">Przedsiębiorstwa powiązane z użytkownikiem</h2>

@if (Model.Companies.Count != 0)
{
    @await Component.InvokeAsync("DisplayCompanyWithUserRoleDataTable", new { companyViewModel = Model.Companies, tableIdentificator = "listCompanies" })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Użytkownik nie jest zrzeszony z żadnym przedsiębiorstwem</div>
}

<h2 class="mt-4 mb-4">Weryfikowany certyfikat</h2>

@{List<DisplayGivenCertificateToUserWithoutCourseViewModel> givenCertificateList = new List<DisplayGivenCertificateToUserWithoutCourseViewModel>();
    givenCertificateList.Add(Model.GivenCertificate);}

@await Component.InvokeAsync("DisplayGivenCertificateWithUserDataTable", new { givenCertificateViewModel = givenCertificateList, userViewModel = Model.User, tableIdentificator = "listGivenCertificates" })

@section Scripts{
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listGivenCertificates");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listCompanies");}
}
