@model Certification_System.DTOViewModels.CompanyWorkersExamDetailsViewModel
@using Certification_System.DTOViewModels

@{
    ViewData["Title"] = "CompanyWorkersExamDetails";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Szczegóły egzaminu</h1>
<hr />

@if (!string.IsNullOrWhiteSpace(ViewBag.message))
{
    <h2 class="alert alert-info" role="alert">@ViewBag.message</h2>
}

<h2>Informacje o egzaminie</h2>

<div class="row m-0 mt-3 mb-3">
    <a asp-action="DisplayCompanyWorkersExamSummary" asp-route-examIdentificator="@Model.ExamIdentificator" asp-controller="Exams" class="btn btn-success mt-1 mr-1 xs450px_FloatLeft">Osiągane rezultaty</a>
    <a asp-action="CompanyWorkerCourseDetails" asp-route-courseIdentificator="@Model.Course.CourseIdentificator" asp-controller="Courses" class="btn btn-outline-info mt-1 xs450px_FloatRight">Powrót do szczegółów kursu</a>
</div>

<div>
    <form asp-action="CompanyWorkersExamDetails">

        <div class="col-md-8 col-xl-6 col-lg-6 col-sm-12 col-xs-10 m-auto p-3 shadow p-3 mb-5 bg-light rounded border border-primary rounded-bottom" style="opacity:0.90">

            <div class="form-group">
                <label asp-for="ExamIndexer" class="control-label"></label>
                <input asp-for="ExamIndexer" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="OrdinalNumber" class="control-label"></label>
                <input asp-for="OrdinalNumber" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <textarea asp-for="Name" class="form-control col-12" style="width:100%; min-width:100%;" readonly></textarea>
            </div>

            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control col-12" style="width:100%; min-width:100%;" readonly></textarea>
            </div>

            <div class="form-group">
                <label asp-for="TypeOfExam" class="control-label"></label>
                <input asp-for="TypeOfExam" class="form-control col-12" style="width:100%; min-width:100%;" readonly />
            </div>

            <div class="form-group">
                <label asp-for="DateOfStart" class="control-label"></label>
                <input asp-for="DateOfStart" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="DateOfEnd" class="control-label"></label>
                <input asp-for="DateOfEnd" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="DurationDays" class="control-label"></label>
                <input asp-for="DurationDays" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="DurationMinutes" class="control-label"></label>
                <input asp-for="DurationMinutes" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="ExamDividedToTerms" class="control-label"></label>
                <div class="row pl-3">
                    <input type="checkbox" asp-for="ExamDividedToTerms" class="form-control col-12" data-toggle="toggle" data-on="Tak" data-off="Nie" data-size="sm" disabled />
                </div>
            </div>

            <div class="form-group">
                <label asp-for="UsersQuantity" class="control-label"></label>
                <input asp-for="UsersQuantity" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="UsersLimit" class="control-label"></label>
                <input asp-for="UsersLimit" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="Country" class="control-label"></label>
                <input asp-for="Country" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="City" class="control-label"></label>
                <input asp-for="City" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="PostCode" class="control-label"></label>
                <input asp-for="PostCode" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control col-12" readonly />
            </div>

            <div class="form-group">
                <label asp-for="NumberOfApartment" class="control-label"></label>
                <input asp-for="NumberOfApartment" class="form-control col-12" readonly />
            </div>

        </div>
    </form>
</div>

<h2 class="mt-4 mb-4">Kurs w ramach którego odbywa się egzamin</h2>

@{List<DisplayCourseViewModel> courseList = new List<DisplayCourseViewModel>();
    courseList.Add(Model.Course);}

@await Component.InvokeAsync("DisplayCourseDataTable", new { courseViewModel = courseList, tableIdentificator = "listCourses", operationSet = 4 })

@if (Model.ExamDividedToTerms)
{
    <h2 class="mt-4 mb-4">Tury egzaminu</h2>

    if (Model.ExamTerms.Count() != 0)
    {
        @await Component.InvokeAsync("DisplayExamTermWithoutExamDataTable", new { examTermViewModel = Model.ExamTerms, tableIdentificator = "listExamTerms", operationSet = 4 })
    }
    else
    {
        <div class="mt-4 mb-4 alert alert-warning">Brak dodanych tur egzaminu</div>
    }
}

<h2 class="mt-4 mb-4">Pracownicy przedsiębiorstwa zapisani na egzamin</h2>

@if (!Model.ExamDividedToTerms)
{
    <div class="mt-3 mb-3">
        @if ((Model.DateOfStart > DateTime.Now))
        {
            <a asp-action="AssignCompanyWorkersToExam" asp-route-examIdentificator="@Model.ExamIdentificator" asp-controller="Exams" class="btn btn-primary mt-1 mr-1">Zapisz pracowników</a>

            @if (Model.EnrolledCompanyWorkers.Count != 0)
            {
                <a asp-action="RemoveCompanyWorkersFromExam" asp-route-examIdentificator="@Model.ExamIdentificator" asp-controller="Exams" class="btn btn-danger mt-1">Usuń zapisanych pracowników</a>
            }
        }
    </div>
}

@if (Model.EnrolledCompanyWorkers.Count != 0)
{
    @await Component.InvokeAsync("DisplayCrucialDataUserDataTable", new { userViewModel = Model.EnrolledCompanyWorkers, tableIdentificator = "listUsers", operationSet = 3 })
}
else
{
    <div class="mt-4 mb-4 alert alert-warning">Brak zapisanych użytkowników</div>
}

@if (Model.ExamResults.Count() != 0)
{
    <h2 class="mt-4 mb-4">Wyniki pracowników</h2>

    @await Component.InvokeAsync("DisplayExamResultToUserDataTable", new { examResultViewModel = Model.ExamResults, tableIdentificator = "listExamsWithExamsResults", operationSet = 4 })
}

@section Scripts {
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listCourses");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listExamTerms");}
    @{await Html.RenderPartialAsync("_DataTableBasicScript", "listExamsWithExamsResults");}
}
